{
    "swagger": "2.0",
    "info": {
      "title": "Your API Documentation",
      "description": "API documentation for managing users, books, companies, and authentication.",
      "version": "1.0"
    },
    "basePath": "/api/v1",
    "schemes": ["http"],
    "paths": {
      "/auth/register": {
        "post": {
          "summary": "Register a new user",
          "description": "Register a new user with provided information.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {"type": "string"},
                  "last_name": {"type": "string"},
                  "contact": {"type": "string"},
                  "email": {"type": "string", "format": "email"},
                  "user_type": {"type": "string"},
                  "password": {"type": "string"},
                  "biography": {"type": "string"}
                }
              }
            }
          ],
          "responses": {
            "201": {"description": "User created successfully"},
            "400": {"description": "Bad request"},
            "409": {"description": "Conflict - Email or contact already exists"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/auth/users": {
        "get": {
          "summary": "Get all users",
          "description": "Retrieve a list of all users.",
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Success"},
            "403": {"description": "Forbidden"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/auth/user/{id}": {
        "get": {
          "summary": "Get user by ID",
          "description": "Retrieve user details by ID.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Success"},
            "403": {"description": "Forbidden"},
            "404": {"description": "User not found"},
            "500": {"description": "Internal Server Error"}
          }
        },
        "put": {
          "summary": "Update user",
          "description": "Update user details by ID.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {"type": "string"},
                  "last_name": {"type": "string"},
                  "contact": {"type": "string"},
                  "email": {"type": "string", "format": "email"},
                  "user_type": {"type": "string"},
                  "password": {"type": "string"},
                  "biography": {"type": "string"}
                }
              }
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "User updated successfully"},
            "403": {"description": "Forbidden"},
            "404": {"description": "User not found"},
            "500": {"description": "Internal Server Error"}
          }
        },
        "delete": {
          "summary": "Delete user",
          "description": "Delete user by ID.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "User deleted successfully"},
            "403": {"description": "Forbidden"},
            "404": {"description": "User not found"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/auth/login": {
        "post": {
          "summary": "User login",
          "description": "Authenticate user and generate access token.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "password": {"type": "string"}
                }
              }
            }
          ],
          "responses": {
            "200": {"description": "Login successful"},
            "400": {"description": "Bad request"},
            "401": {"description": "Unauthorized"},
            "404": {"description": "User not found"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/auth/logout": {
        "post": {
          "summary": "User logout",
          "description": "Invalidate access token to logout user.",
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Logout successful"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/book/register": {
        "post": {
          "summary": "Register a new book",
          "description": "Register a new book with provided information.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string"},
                  "description": {"type": "string"},
                  "price": {"type": "number"},
                  "price_unit": {"type": "string"},
                  "pages": {"type": "integer"},
                  "publication_date": {"type": "string", "format": "date"},
                  "isbn": {"type": "string"},
                  "genre": {"type": "string"},
                  "company_id": {"type": "integer"}
                }
              }
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "201": {"description": "Book created successfully"},
            "400": {"description": "Bad request"},
            "403": {"description": "Forbidden"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/book/book/{book_id}": {
        "delete": {
          "summary": "Delete book",
          "description": "Delete book by ID.",
          "parameters": [
            {
              "name": "book_id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Book deleted successfully"},
            "403": {"description": "Forbidden"},
            "404": {"description": "Book not found"},
            "500": {"description": "Internal Server Error"}
          }
        },
        "put": {
          "summary": "Update book",
          "description": "Update book details by ID.",
          "parameters": [
            {
              "name": "book_id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string"},
                  "description": {"type": "string"},
                  "price": {"type": "number"},
                  "price_unit": {"type": "string"},
                  "pages": {"type": "integer"},
                  "publication_date": {"type": "string", "format": "date"},
                  "isbn": {"type": "string"},
                  "genre": {"type": "string"},
                  "company_id": {"type": "integer"}
                }
              }
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Book updated successfully"},
            "403": {"description": "Forbidden"},
            "404": {"description": "Book not found"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/company/register": {
        "post": {
          "summary": "Register a new company",
          "description": "Register a new company with provided information.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "origin": {"type": "string"},
                  "description": {"type": "string"}
                }
              }
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "201": {"description": "Company registered successfully"},
            "400": {"description": "Bad request"},
            "409": {"description": "Conflict - Company name already exists"},
            "500": {"description": "Internal Server Error"}
          }
        }
      },
      "/company/{id}": {
        "get": {
          "summary": "Get company by ID",
          "description": "Retrieve company details by ID.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Success"},
            "403": {"description": "Forbidden"},
            "404": {"description": "Company not found"},
            "500": {"description": "Internal Server Error"}
          }
        },
        "put": {
          "summary": "Update company",
          "description": "Update company details by ID.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "origin": {"type": "string"},
                  "description": {"type": "string"}
                }
              }
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Company updated successfully"},
            "403": {"description": "Forbidden"},
            "404": {"description": "Company not found"},
            "500": {"description": "Internal Server Error"}
          }
        },
        "delete": {
          "summary": "Delete company",
          "description": "Delete company by ID.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "security": [{"BearerAuth": []}],
          "responses": {
            "200": {"description": "Company deleted successfully"},
            "403": {"description": "Forbidden"},
            "404": {"description": "Company not found"},
            "500": {"description": "Internal Server Error"}
          }
        }
      }
    },
    "securityDefinitions": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "security": [{
      "BearerAuth":[]
}]
  }